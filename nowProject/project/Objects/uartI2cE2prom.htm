<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\uartI2cE2prom.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\uartI2cE2prom.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Sun Nov 24 12:20:47 2019
<BR><P>
<H3>Maximum Stack Usage =        136 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Board_Init &rArr; Board_Debug_Init &rArr; Chip_Clock_SetUSARTNBaseClockRate &rArr; Chip_Clock_GetUSARTNBaseClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[43]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[8]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">HardFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">PendSV_Handler</a><BR>
 <LI><a href="#[b]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">SysTick_Handler</a><BR>
 <LI><a href="#[1d]">ADC_OVR_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ADC_OVR_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">ADC_OVR_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1a]">ADC_SEQA_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1b]">ADC_SEQB_IRQHanlder</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1c]">ADC_THCMP_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[17]">BOD_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[15]">CMP_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1e]">DMA_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[18]">FLASH_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[8]">HardFault_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[12]">I2C0_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[11]">I2C1_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[1f]">I2C2_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[20]">I2C3_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[14]">MRT_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[7]">NMI_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[21]">PIN_INT0_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[22]">PIN_INT1_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[23]">PIN_INT2_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[24]">PIN_INT3_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[25]">PIN_INT4_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[26]">PIN_INT5_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[27]">PIN_INT6_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[28]">PIN_INT7_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[a]">PendSV_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[6]">Reset_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[13]">SCT_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[c]">SPI0_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[d]">SPI1_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[b]">SysTick_Handler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[29]">SystemInit</a> from sysinit_8xx.o(i.SystemInit) referenced from keil_startup_lpc82x.o(.text)
 <LI><a href="#[e]">UART0_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[f]">UART1_IRQHandler</a> from main.o(i.UART1_IRQHandler) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[10]">UART2_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[16]">WDT_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[19]">WKT_IRQHandler</a> from keil_startup_lpc82x.o(.text) referenced from keil_startup_lpc82x.o(RESET)
 <LI><a href="#[2d]">__main</a> from __main.o(!!!main) referenced from keil_startup_lpc82x.o(.text)
 <LI><a href="#[2c]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[2b]">fputc</a> from board.o(i.fputc) referenced from _printf_char_file.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[30]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[80]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[81]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[31]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[82]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[35]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[83]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[84]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[85]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[86]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[87]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[88]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[89]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[90]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[91]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[92]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[93]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[94]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[95]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[96]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[97]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[98]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[99]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[9a]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[9b]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[9c]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[9d]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[9e]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[9f]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[32]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[34]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a0]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[36]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Board_Init &rArr; Board_Debug_Init &rArr; Chip_Clock_SetUSARTNBaseClockRate &rArr; Chip_Clock_GetUSARTNBaseClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a1]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[45]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[39]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[a2]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[6]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_OVR_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_OVR_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>ADC_SEQA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>ADC_SEQB_IRQHanlder</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_THCMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>CMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>MRT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>PIN_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>PIN_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>PIN_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PIN_INT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PIN_INT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>PIN_INT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>PIN_INT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PIN_INT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SCT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>WKT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc82x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, keil_startup_lpc82x.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5f]"></a>__aeabi_lmul</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetUSARTNBaseClockRate
</UL>

<P><STRONG><a name="[a3]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>__aeabi_uldivmod</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, lludiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetUSARTNBaseClockRate
</UL>

<P><STRONG><a name="[a4]"></a>_ll_udiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, lludiv.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__2printf</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, noretval__2printf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __2printf &rArr; _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a5]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a9]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[5c]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetUSARTNBaseClockRate
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTLFORate
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetUSARTNBaseClockRate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_SetBaud
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SetBusSpeed
</UL>

<P><STRONG><a name="[ab]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[3e]"></a>_printf_char_file</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_char_file.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _printf_char_file &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ferror
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[3f]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[33]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[41]"></a>__printf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, __printf_nopercent.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[38]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[46]"></a>Board_Debug_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, board.o(i.Board_Debug_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Board_Debug_Init &rArr; Chip_Clock_SetUSARTNBaseClockRate &rArr; Chip_Clock_GetUSARTNBaseClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetUSARTNBaseClockRate
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_SetBaud
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[4b]"></a>Board_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, board.o(i.Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Board_Init &rArr; Board_Debug_Init &rArr; Chip_Clock_SetUSARTNBaseClockRate &rArr; Chip_Clock_GetUSARTNBaseClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI_PinMux
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_LED_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>Board_UARTPutTextChar</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, board.o(i.Board_UARTPutTextChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Board_UARTPutTextChar &rArr; Chip_UART_SendBlocking &rArr; Chip_UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_SendBlocking
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[57]"></a>Chip_Clock_GetMainClockRate</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, clock_8xx.o(i.Chip_Clock_GetMainClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTOSCRate
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetUSARTNBaseClockRate
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetUSARTNBaseClockRate
</UL>

<P><STRONG><a name="[5b]"></a>Chip_Clock_GetSystemClockRate</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, clock_8xx.o(i.Chip_Clock_GetSystemClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SetBusSpeed
</UL>

<P><STRONG><a name="[58]"></a>Chip_Clock_GetSystemPLLInClockRate</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_Clock_GetSystemPLLInClockRate))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[5a]"></a>Chip_Clock_GetSystemPLLOutClockRate</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, clock_8xx.o(i.Chip_Clock_GetSystemPLLOutClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_Clock_GetSystemPLLOutClockRate
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetPLLFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[5e]"></a>Chip_Clock_GetUSARTNBaseClockRate</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, clock_8xx.o(i.Chip_Clock_GetUSARTNBaseClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Chip_Clock_GetUSARTNBaseClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetUSARTNBaseClockRate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_SetBaud
</UL>

<P><STRONG><a name="[59]"></a>Chip_Clock_GetWDTOSCRate</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, clock_8xx.o(i.Chip_Clock_GetWDTOSCRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTLFORate
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[6e]"></a>Chip_Clock_SetMainClockSource</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_Clock_SetMainClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[69]"></a>Chip_Clock_SetPLLBypass</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_Clock_SetPLLBypass))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[6b]"></a>Chip_Clock_SetSystemPLLSource</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_Clock_SetSystemPLLSource))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[49]"></a>Chip_Clock_SetUSARTNBaseClockRate</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, clock_8xx.o(i.Chip_Clock_SetUSARTNBaseClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Chip_Clock_SetUSARTNBaseClockRate &rArr; Chip_Clock_GetUSARTNBaseClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetUSARTNBaseClockRate
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_SetUSARTFRGDivider
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
</UL>

<P><STRONG><a name="[63]"></a>Chip_I2CM_SetBusSpeed</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, i2c_8xx.o(i.Chip_I2CM_SetBusSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Chip_I2CM_SetBusSpeed &rArr; Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SetDutyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupI2CMaster
</UL>

<P><STRONG><a name="[65]"></a>Chip_I2C_Init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, i2c_8xx.o(i.Chip_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetResetID
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetClockID
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupI2CMaster
</UL>

<P><STRONG><a name="[76]"></a>Chip_IOCON_PinSetI2CMode</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, ioswm_8xx.o(i.Chip_IOCON_PinSetI2CMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Chip_IOCON_PinSetI2CMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
</UL>

<P><STRONG><a name="[7a]"></a>Chip_IOCON_PinSetMode</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, ioswm_8xx.o(i.Chip_IOCON_PinSetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Chip_IOCON_PinSetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[55]"></a>Chip_SWM_MovablePinAssign</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, ioswm_8xx.o(i.Chip_SWM_MovablePinAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Chip_SWM_MovablePinAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI_PinMux
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
</UL>

<P><STRONG><a name="[6c]"></a>Chip_SYSCTL_PowerDown</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, syscon_8xx.o(i.Chip_SYSCTL_PowerDown))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[6a]"></a>Chip_SYSCTL_PowerUp</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, syscon_8xx.o(i.Chip_SYSCTL_PowerUp))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[68]"></a>Chip_SetupXtalClocking</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, sysinit_8xx.o(i.Chip_SetupXtalClocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_SetupXtalClocking
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PowerUp
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PowerDown
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetSystemPLLSource
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetPLLBypass
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetMainClockSource
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[48]"></a>Chip_UART_Init</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, uart_8xx.o(i.Chip_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_UART_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUARTClockID
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[71]"></a>Chip_UART_Send</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, uart_8xx.o(i.Chip_UART_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Chip_UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_SendByte
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_SendBlocking
</UL>

<P><STRONG><a name="[52]"></a>Chip_UART_SendBlocking</STRONG> (Thumb, 46 bytes, Stack size 40 bytes, uart_8xx.o(i.Chip_UART_SendBlocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Chip_UART_SendBlocking &rArr; Chip_UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UARTPutTextChar
</UL>

<P><STRONG><a name="[4a]"></a>Chip_UART_SetBaud</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, uart_8xx.o(i.Chip_UART_SetBaud))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Chip_UART_SetBaud &rArr; Chip_Clock_GetUSARTNBaseClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetUSARTNBaseClockRate
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, clock_8xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemCoreClockUpdate &rArr; Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[29]"></a>SystemInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, sysinit_8xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; Chip_IOCON_PinSetMode
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_EnableFixedPin
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_PinSetMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>UART1_IRQHandler</STRONG> (Thumb, 254 bytes, Stack size 8 bytes, main.o(i.UART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_IRQHandler &rArr; Chip_GPIO_PinSetState
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_ReadByte
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_PinSetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc82x.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>_sys_exit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, board.o(i._sys_exit))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[40]"></a>ferror</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, board.o(i.ferror))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_file
</UL>

<P><STRONG><a name="[2b]"></a>fputc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, board.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = fputc &rArr; Board_UARTPutTextChar &rArr; Chip_UART_SendBlocking &rArr; Chip_UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UARTPutTextChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_file.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>main</STRONG> (Thumb, 678 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = main &rArr; Board_Init &rArr; Board_Debug_Init &rArr; Chip_Clock_SetUSARTNBaseClockRate &rArr; Chip_Clock_GetUSARTNBaseClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_SetBaud
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setupI2CMaster
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_IntEnable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_PinSetState
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7b]"></a>Chip_GPIO_PinSetState</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.Chip_GPIO_PinSetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_GPIO_PinSetState
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>Chip_SWM_EnableFixedPin</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(i.Chip_SWM_EnableFixedPin))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
</UL>

<P><STRONG><a name="[7d]"></a>Chip_UART_IntEnable</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Chip_UART_IntEnable))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>Chip_UART_ReadByte</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, main.o(i.Chip_UART_ReadByte))
<BR><BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[74]"></a>Init_I2C_PinMux</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, main.o(i.Init_I2C_PinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Init_I2C_PinMux &rArr; Chip_IOCON_PinSetI2CMode
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_PinSetI2CMode
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_EnableFixedPin
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7e]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>setupI2CMaster</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, main.o(i.setupI2CMaster))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = setupI2CMaster &rArr; Chip_I2CM_SetBusSpeed &rArr; Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetWDTOSCRate &rArr; Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2C_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SetBusSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4c]"></a>Board_LED_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, board.o(i.Board_LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Board_LED_Init &rArr; Chip_GPIO_PinSetDIR
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_PinSetState
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_PinSetDIR
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[47]"></a>Board_UART_Init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, board.o(i.Board_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Board_UART_Init &rArr; Chip_SWM_MovablePinAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_MovablePinAssign
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_DisableFixedPin
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_DisablePeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
</UL>

<P><STRONG><a name="[56]"></a>Chip_Clock_DisablePeriphClock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, board.o(i.Chip_Clock_DisablePeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI_PinMux
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
</UL>

<P><STRONG><a name="[53]"></a>Chip_Clock_EnablePeriphClock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, board.o(i.Chip_Clock_EnablePeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_SPI_PinMux
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
</UL>

<P><STRONG><a name="[4f]"></a>Chip_GPIO_PinSetDIR</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, board.o(i.Chip_GPIO_PinSetDIR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_GPIO_PinSetDIR
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_LED_Init
</UL>

<P><STRONG><a name="[50]"></a>Chip_GPIO_PinSetState</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, board.o(i.Chip_GPIO_PinSetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_GPIO_PinSetState
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_LED_Init
</UL>

<P><STRONG><a name="[54]"></a>Chip_SWM_DisableFixedPin</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, board.o(i.Chip_SWM_DisableFixedPin))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_UART_Init
</UL>

<P><STRONG><a name="[77]"></a>Chip_SWM_EnableFixedPin</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, board.o(i.Chip_SWM_EnableFixedPin))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_I2C_PinMux
</UL>

<P><STRONG><a name="[4e]"></a>Init_I2C_PinMux</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, board.o(i.Init_I2C_PinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Init_I2C_PinMux &rArr; Chip_IOCON_PinSetI2CMode
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_EnableFixedPin
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_DisablePeriphClock
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_PinSetI2CMode
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[4d]"></a>Init_SPI_PinMux</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, board.o(i.Init_SPI_PinMux))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Init_SPI_PinMux &rArr; Chip_SWM_MovablePinAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_MovablePinAssign
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_DisablePeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[5d]"></a>Chip_Clock_GetPLLFreq</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_Clock_GetPLLFreq))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
</UL>

<P><STRONG><a name="[61]"></a>Chip_Clock_GetWDTLFORate</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, clock_8xx.o(i.Chip_Clock_GetWDTLFORate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_Clock_GetWDTLFORate
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetWDTOSCRate
</UL>

<P><STRONG><a name="[62]"></a>Chip_SYSCTL_SetUSARTFRGDivider</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clock_8xx.o(i.Chip_SYSCTL_SetUSARTFRGDivider))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetUSARTNBaseClockRate
</UL>

<P><STRONG><a name="[6d]"></a>Chip_Clock_EnablePeriphClock</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sysinit_8xx.o(i.Chip_Clock_EnablePeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[79]"></a>Chip_SWM_EnableFixedPin</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sysinit_8xx.o(i.Chip_SWM_EnableFixedPin))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[64]"></a>Chip_I2CM_SetDutyCycle</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, i2c_8xx.o(i.Chip_I2CM_SetDutyCycle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_I2CM_SetDutyCycle
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2CM_SetBusSpeed
</UL>

<P><STRONG><a name="[66]"></a>I2C_GetClockID</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, i2c_8xx.o(i.I2C_GetClockID))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2C_Init
</UL>

<P><STRONG><a name="[67]"></a>I2C_GetResetID</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, i2c_8xx.o(i.I2C_GetResetID))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_I2C_Init
</UL>

<P><STRONG><a name="[70]"></a>Chip_SYSCTL_PeriphReset</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, uart_8xx.o(i.Chip_SYSCTL_PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Init
</UL>

<P><STRONG><a name="[73]"></a>Chip_UART_GetStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart_8xx.o(i.Chip_UART_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Send
</UL>

<P><STRONG><a name="[72]"></a>Chip_UART_SendByte</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, uart_8xx.o(i.Chip_UART_SendByte))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Send
</UL>

<P><STRONG><a name="[6f]"></a>getUARTClockID</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, uart_8xx.o(i.getUARTClockID))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Init
</UL>

<P><STRONG><a name="[2c]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[44]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
